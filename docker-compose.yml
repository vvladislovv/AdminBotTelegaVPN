services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '3000:3000'
        depends_on:
            postgres:
                condition: service_started
            redis:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        environment:
            - NODE_ENV=development
            - PORT=3000
            - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/admin_bot_vpn
            - REDIS_URL=redis://redis:6379
            - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
            - JWT_SECRET=your_jwt_secret_here
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
    rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
            - '5672:5672'
            - '15672:15672'
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=admin
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "ping"]
            interval: 5s
            timeout: 5s
            retries: 10
    postgres:
        image: postgres:16-alpine
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=admin_bot_vpn
        volumes:
            - postgres_data:/var/lib/postgresql/data

    redis:
        image: redis:alpine
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data

    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/ssl:/etc/nginx/ssl
        depends_on:
            - app

volumes:
    postgres_data:
    redis_data:
    rabbitmq_data:
